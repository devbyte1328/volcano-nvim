return {
    "devbyte1328/volcano-nvim",
    version = "^1.0.0", -- use version <2.0.0 to avoid breaking changes
    build = ":UpdateRemotePlugins",
    config = function()
        -- Set up Python provider to use local venv
        vim.g.python3_host_prog = vim.fn.expand("~/.config/nvim/venv/bin/python")

        -- Ensure Jupyter runtime directory exists
        local jupyter_runtime_dir = vim.fn.expand("~/.local/share/jupyter/runtime/")
        if vim.fn.isdirectory(jupyter_runtime_dir) == 0 then
            vim.fn.mkdir(jupyter_runtime_dir, "p")
        end

        -- Molten config
        vim.g.molten_output_win_max_height = 12

        -- Auto-run :VolcanoInit if opening a .ipynb file
        vim.api.nvim_create_autocmd("BufReadPost", {
            pattern = "*.ipynb",
            callback = function()
                vim.cmd("VolcanoInit")
            end,
        })

        -- Auto-run :SaveIPYNB after saving interpreted notebook files
        vim.api.nvim_create_autocmd("BufWritePost", {
            pattern = "*.ipynb.interpreted",
            callback = function()
                vim.cmd("SaveIPYNB")
            end,
        })

        -- Register custom filetype
        vim.filetype.add({
            extension = {
                ["ipynb.interpreted"] = "ipynb_interpreted",
            },
        })

        -- Manually enforce filetype for backup (some systems don't detect it)
        vim.api.nvim_create_autocmd({ "BufRead", "BufNewFile" }, {
            pattern = "*.ipynb.interpreted",
            command = "set filetype=ipynb_interpreted",
        })

        -- Syntax highlighting for ipynb_interpreted filetype
        vim.api.nvim_create_autocmd("FileType", {
            pattern = "ipynb_interpreted",
            callback = function()
                vim.schedule(function()
                    vim.cmd([[
                        syntax match IPYNBCellTag /^<cell>$/ containedin=ALL
                        syntax match IPYNBCellTag /^<\/cell>$/ containedin=ALL
                        syntax match IPYNBOutputTag /^<output>$/ containedin=ALL
                        syntax match IPYNBOutputTag /^<\/output>$/ containedin=ALL

                        syntax include @Python syntax/python.vim
                        syntax region IPYNBPython start=/^<cell>$/ end=/^<\/cell>$/ contains=@Python keepend

                        syntax region IPYNBOutputContent start=/^<output>$/ end=/^<\/output>$/ contains=IPYNBOutputText keepend
                        syntax match IPYNBOutputText /.*/ contained

                        " Dark gray tags
                        highlight IPYNBCellTag guifg=#5e5e5e ctermfg=240
                        highlight IPYNBOutputTag guifg=#5e5e5e ctermfg=240

                        " Bright white output content
                        highlight IPYNBOutputText guifg=#ffffff ctermfg=231
                    ]])
                end)
            end,
        })
    end,
}






vim.keymap.set("n", "<leader><CR>", function()
  vim.cmd("VolcanoEvaluate")
end, { desc = "Run current Jupyter cell with Volcano" })


vim.keymap.set("n", "<A-CR>", function()
  vim.cmd("VolcanoNewCell")
end, { desc = "Insert new Jupyter cell", noremap = true, silent = true })













python3 -m venv ~/.config/nvim/venv
source ~/.config/nvim/venv/bin/activate
pip3 install pynvim jupyter_client jupyter
